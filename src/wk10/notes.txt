Inheritance
    Creating a class based on another class
    SuperHero   a Human with extra features
    A head start, where you can USE features of existing classes
    What can you use/what is accessible?
        instance variables
        methods
            normal
            constructors
                * only default constructor is inherited
        constants
        * all non-private

    Note that you cannot remove any entites
    Private entites are not accessible. They may be accessible via
    public wrappers/methods

Polymorphism

Terms

OLD                                     NEW

parent                                  child
base                                    derived
super                                   sub



In java all classes inherit from the base data type class
Object


Create a class named Animal
    instance variables
        name, legs, color, species
    constructors: 2: default + 4-args
    method: isScary: yes if more than 4 legs
    override to toString to summarize all 4 instance variables

Create a Cat based on Animal
    new instance variables of
        weight, whiskers
    constructors: 3: 2 constructors of Animal + constructor that accepts 6 args
    method: isScary is overridden: weight > 300 pounds
    override to toString to summarize all 6 instance variables


Polymorphism
    greek word
    poly        many
    morphism    body/forms

Overriding              child class creates a new version of method
Overloading             creating a new variable of a method


Concrete class              what we've been doing so far. class that you can instantiate

Abstract class
Interface

    Cannot be instantiated. Need to be part of another class
Abstract class
    dedicated super class
    have same features of a concrete class
        instance variables, constructors, methods, constants
    additional feature:     abstract method
            is an idea/concept that has no default implementation/body

    inner component of a bigger object

interface
    external component of a bigger object
    only contains abstract methods & constants
        methods with no default implementation
    accessibility is public
    an entity that is a list of requirements

A concrete can only extend/inherit ONE other class (concrete or abstract)
A concrete class can implement multiple interfaces
If a concrete class extends an abstract class with abstract methods, it must implement that abstract methods

Me: State an object
You: If object should be concrete class, abstract class, or interface

1) Does this object exist by itself
    Yes: Concrete
    No: It is a component

2) Is this component an Internal component of bigger object or external component
    Internal: Abstract
    External: Interface

Table
Chair

Lung
Heart

Doorknob
Hair




_______________________

House
Apartment: Room 101
Door: abstract  interface
Floor:  abstract


Game part 2:
Me: State a feature
You: feature exists in concrete, abstract, interface, combo

constructors:   CA

constants:      CIA

regular
methods         CA

abstract        AI
methods

instance
variables       CA