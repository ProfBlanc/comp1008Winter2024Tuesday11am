package wk5;

import java.util.ArrayList;

/**
 * This is a cool project that my prof decided to do because he loves pizza
 * However, I am learning so mush. The downside is that now I want to eat pizza
 *
 * @author Ben Blanc
 * @since 2024-02-06
 * @version 1.0
 * @implNote This is now you implement this class
 */
public class PizzaOrder {

    public static final String owner = "Ben Blanc";
    public static final String address = "1 Georgian Drive";


    /** Comma separated values representing the toppings of a pizza */
    private String toppings;

    private ArrayList<String> toppingsWeAreAllowing = new ArrayList<>();

    private int numberOfSlices = 4;
    private final double pricePerSlice = 2.25;

    private int numberOfToppings;
    private int timeToPrepare = 10;

    private double price;

    public PizzaOrder(){}

    public PizzaOrder(String toppings) {
        this.toppings = toppings;
        setToppings();
        setPrice();
        setTimeToPrepare();

    }

    public int getNumberOfSlices() {
        return numberOfSlices;
    }

    public void setNumberOfSlices(int numberOfSlices) {
        if(numberOfSlices == 4 || numberOfSlices == 6 || numberOfSlices == 8 || numberOfSlices == 12)
            this.numberOfSlices = numberOfSlices;
    }

    /**
     * Returns the price of the pizza order
     * @return price of the pizza order as a double
     */
    public double getPrice() {
        return price;
    }

    /**
     * Get the price of the order after applying the discount based on the category of person
     * @param category a string that only accepts limited values (students and elderly)
     * @return the discount price of the pizza order
     */
    public double getPrice(String category){
        double calculatedPrice = getPrice();
        if(category.toLowerCase().contains("student")){
            calculatedPrice = getPrice() * .8;
        }
        else if(category.toLowerCase().contains("elder")){
            calculatedPrice = getPrice() / 2;
        }
        return calculatedPrice;
    }

    // forward slash + two asterisks

    /**
     * The price is generated by multiplying the number of slices by the price per slice
     */
    public void setPrice() {
       price =  numberOfSlices * pricePerSlice;
    }

    /**
     * time the client should expect their pizza
     * @return time until pizza is delivered
     */
    public int getTimeToPrepare() {
        return timeToPrepare;
    }

    /**
     * Calculate the time based on the number of slices and the number of toppings
     */
    public void setTimeToPrepare() {
        timeToPrepare += numberOfSlices + numberOfToppings;
    }

    public String getToppings() {
        String toppings = "";

        for(String topping : toppingsWeAreAllowing){
            toppings += topping + "\t";
        }
        return toppings;
    }


    public void setToppings() {
        //pepperoni, cheese, pineapple
        ArrayList<String> companyAllowedToppings = new ArrayList<>();

        companyAllowedToppings.add("pepperoni");
        companyAllowedToppings.add("cheese");
        companyAllowedToppings.add("bacon");
        companyAllowedToppings.add("chicken");

        for(String topping : toppings.split(",")){
            //System.out.println(topping);  // pepperoni
                                            // cheese
                                            //pineapple
            if(companyAllowedToppings.contains(topping)){
                numberOfToppings++;
                toppingsWeAreAllowing.add(topping);
            }
        }

    }

    public PizzaOrder(String toppings, int numberOfSlices) {
        this.toppings = toppings;
        setToppings();
        setNumberOfSlices(numberOfSlices);
        setPrice();
        setTimeToPrepare();
    }

    public static PizzaOrder MediumPepperoni(){
        return new PizzaOrder("pepperoni,cheese", 6);
    }
    public static PizzaOrder PartySizedPlainPizza(){
        return new PizzaOrder("cheese", 12);
    }
    public static PizzaOrder PartySizedPizza(String toppings) {
        return new PizzaOrder(toppings, 12);
    }

    //generating a toString method: summarize the values of the object

    @Override
    public String toString() {
        return "PizzaOrder{" +
                "toppings='" + toppings + '\'' +
                ", numberOfSlices=" + numberOfSlices +
                ", numberOfToppings=" + numberOfToppings +
                ", timeToPrepare=" + timeToPrepare +
                ", price=" + price +
                '}';
    }
}
